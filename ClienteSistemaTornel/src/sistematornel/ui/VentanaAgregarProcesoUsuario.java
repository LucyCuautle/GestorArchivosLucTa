/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistematornel.ui;

import clientesistematornel.Client;
import clientesistematornel.Util;
import entitys.Accion;
import entitys.Indicador;
import entitys.Proceso;
import entitys.ProcesoIndicador;
import entitys.UsuarioProceso;
import entitys.UsuarioRegistro;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import static sistematornel.ui.Login.IP;

/**
 *
 * @author Tadeo-developer
 */
public class VentanaAgregarProcesoUsuario extends javax.swing.JFrame {

    private DefaultListModel modeloListProcesos;
    private ArrayList<Proceso> procesos;
    private UsuarioRegistro usuarioRegistro;
    private int procesoSeleccionado;

    public VentanaAgregarProcesoUsuario(UsuarioRegistro usuarioRegistro) {
        initComponents();
        this.usuarioRegistro = usuarioRegistro;
        procesoSeleccionado = -1;

        modeloListProcesos = new DefaultListModel();
        jList1.setModel(modeloListProcesos);

        jList1.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                procesoSeleccionado = jList1.getSelectedIndex();
            }
        });

        getProcesos();
    }

    private void getProcesos() {
        Accion accion = new Accion();
        accion.setAccion(5);

        Client cliente = new Client(IP, Util.PORT, 3, accion);//192.168.1.72

        cliente.setOnProcesosListener(new Client.OnProcesosListener() {

            @Override
            public void onProcesos(ArrayList<Proceso> procesosNew) {

                modeloListProcesos.clear();
                procesos = procesosNew;
                for (Proceso proceso : procesos) {
                    modeloListProcesos.addElement(proceso.getNombre());
                }

            }
        });
        Thread hilo = new Thread(cliente);
        hilo.start();
    }

    private void agregarUsuarioProceso(Proceso proceso) {
        UsuarioProceso usuarioProceso = new UsuarioProceso();
        usuarioProceso.setUsuarioRegistro(usuarioRegistro);
        usuarioProceso.setProceso(proceso);

        Accion accion = new Accion();
        accion.setAccion(10);
        accion.setObject(usuarioProceso);
        Client c = new Client(IP, Util.PORT, 3, accion);//192.168.1.72

        c.setOnStatusTextListener(new Client.OnStatusTextListener() {

            @Override
            public void onStatusText(boolean respuesta) {
                if (respuesta) {
                    RegistroUsuario registroUsuario = new RegistroUsuario();
                    registroUsuario.setVisible(true);
                    setVisible(false);
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "No se logro agregar el proceso");
                }
            }
        });
        Thread hilo = new Thread(c);
        hilo.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jList1);

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (procesoSeleccionado >= 0) {
            agregarUsuarioProceso(procesos.get(procesoSeleccionado));
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un proceso para agregar ");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        RegistroUsuario registroUsuario = new RegistroUsuario();
        registroUsuario.setVisible(true);
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
